on:
  push:
    tags:
      - 'v*'

name: Create Release

jobs:
  generate-changelog:
    name: Generate Changelog
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v2
        with:
          ref: main
          ssh-key: ${{ secrets.DEPLOY_KEY }}

      - name: Setup Node.js
        uses: actions/setup-node@v2
        with:
          node-version: '16'

      - name: Setup Git
        run: |
          git config user.name '${{secrets.MAINTAINER_NAME}}'
          git config user.email '${{secrets.MAINTAINER_EMAIL}}'
      - name: Install using Yarn
        uses: Borales/actions-yarn@v4.2.0
        with:
          cmd: install
      - name: Generate Changelog
        run: |
          npx generate-changelog
      - name: Commit and Push latest version
        run: |
          git add .
          git commit --allow-empty -m "docs: generate changelog ${{ github.ref_name }} [skip ci]"
          git push origin main
  publish:
    name: Publish to npm
    runs-on: ubuntu-latest
    needs: generate-changelog
    steps:
      - uses: actions/checkout@v2
      - uses: actions/setup-node@v2
        with:
          node-version: '16'
      - name: Publish
        run: |
          npm config set //registry.npmjs.org/:_authToken ${NPM_TOKEN}
          yarn build
          yarn publish
        env:
          NPM_TOKEN: ${{ secrets.NPM_TOKEN }}

  create-github-release:
    name: Create GitHub Release
    runs-on: ubuntu-latest
    needs: publish
    steps:
      - name: Checkout code
        uses: actions/checkout@v2
      - name: Create Release Notes
        uses: actions/github-script@v4.0.2
        with:
          github-token: ${{secrets.GITHUB_TOKEN}}
          script: |
            await github.request(`POST /repos/${{ github.repository }}/releases`, {
              tag_name: "${{ github.ref }}",
              generate_release_notes: true
            });
